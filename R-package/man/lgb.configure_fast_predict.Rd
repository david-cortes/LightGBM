% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lgb.Booster.R
\name{lgb.configure_fast_predict}
\alias{lgb.configure_fast_predict}
\title{Configure Fast Single-Row Predictions}
\usage{
lgb.configure_fast_predict(
  model,
  csr = FALSE,
  start_iteration = NULL,
  num_iteration = NULL,
  rawscore = FALSE,
  predleaf = FALSE,
  predcontrib = FALSE,
  params = list()
)
}
\arguments{
\item{model}{LighGBM model object (class \code{lgb.Booster}).

             \bold{The object will be modified in-place}.}

\item{csr}{Whether the prediction function is going to be called on sparse CSR inputs.
If `FALSE`, will be assumed that predictions are going to be called on single-row
regular R matrices.}

\item{start_iteration}{int or None, optional (default=None)
Start index of the iteration to predict.
If None or <= 0, starts from the first iteration.}

\item{num_iteration}{int or None, optional (default=None)
Limit number of iterations in the prediction.
If None, if the best iteration exists and start_iteration is None or <= 0, the
best iteration is used; otherwise, all iterations from start_iteration are used.
If <= 0, all iterations from start_iteration are used (no limits).}

\item{rawscore}{whether the prediction should be returned in the for of original untransformed
sum of predictions from boosting iterations' results. E.g., setting \code{rawscore=TRUE}
for logistic regression would result in predictions for log-odds instead of probabilities.}

\item{predleaf}{whether predict leaf index instead.}

\item{predcontrib}{return per-feature contributions for each record.}

\item{params}{a list of additional named parameters. See
\href{https://lightgbm.readthedocs.io/en/latest/Parameters.html#predict-parameters}{
the "Predict Parameters" section of the documentation} for a list of parameters and
valid values.}
}
\value{
The same `model` that was passed as input, as invisible, with the desired
        configuration stored inside it and available to be used in future calls to
        \link{predict.lgb.Booster}.
}
\description{
Pre-configures a LightGBM model object to produce fast single-row predictions
             for a given input data type, prediction type, and parameters.
}
\details{
Calling this function multiple times with different parameters might not override
         the previous configuration and might trigger undefined behavior.

         Any saved configuration for fast predictions might be lost after making a single-row
         prediction of a different type than what was configured.

         In some situations, setting a fast prediction configuration for one type of prediction
         might cause the prediction function to keep using that configuration for single-row
         predictions even if the requested type of prediction is different from what was configured.

         The configuration does not survive de-serializations, so it has to be generated
         anew in every R process that is going to use it (e.g. if loading a model object
         through `readRDS`, whatever configuration was there previously will be lost).

         Requesting a different prediction type or passing parameters to \link{predict.lgb.Booster}
         will cause it to ignore the fast-predict configuration and take the slow route instead
         (but be aware that an existing configuration might not always be overriden by supplying
         different parameters or prediction type, so make sure to check that the output is what
         was expected when a prediction is to be made on a single row for something different than
         what is configured).

         Note that, if configuring a non-default prediction type (such as leaf indices),
         then that type must also be passed in the call to \link{predict.lgb.Booster} in
         order for it to use the configuration. This also applies for `start_iteration`
         and `num_iteration`, but \bold{the `params` list must be empty} in the call to `predict`.

         Predictions about feature contributions do not allow a fast route for CSR inputs,
         and as such, this function will produce an error if passing `csr=TRUE` and
         `predcontrib=TRUE` together.
}
\examples{
library(lightgbm)
data(mtcars)
X <- as.matrix(mtcars[, -1L])
y <- mtcars[, 1L]
dtrain <- lgb.Dataset(X, label = y, params = list(max_bin = 5L))
params <- list(min_data_in_leaf = 2L)
model <- lgb.train(
  params = params
 , data = dtrain
 , obj = "regression"
 , nrounds = 5L
 , verbose = -1L
)
lgb.configure_fast_predict(model)

x_single <- X[11L, , drop = FALSE]
predict(model, x_single)

# Will not use it if the prediction to be made
# is different from what was configured
predict(model, x_single, predleaf = TRUE)
}
